@model PagedList.IPagedList<MachineLogViewer.Models.Machine>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Machines";
}

<h2>@ViewBag.Title</h2>

@if (User.IsInRole("admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@using (Html.BeginForm("Index", "Machine", FormMethod.Get))
{
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Code:</label>
            <div class="col-md-10">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new {@class = "form-control"})
            </div>
        </div>
 
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Code", "Index", new { sortOrder = ViewBag.CodeSortParm, currentFilter = ViewBag.CurrentFilter })
            @if (string.IsNullOrEmpty(ViewBag.CurrentSort))
            {
                <span class="glyphicon glyphicon-arrow-down"></span>
            }
            else if (ViewBag.CurrentSort == "code_desc")
            {
                <span class="glyphicon glyphicon-arrow-up"></span>
            }
        </th>
        <th>
            @Html.ActionLink("Description", "Index", new {sortOrder = ViewBag.DescrSortParm, currentFilter = ViewBag.CurrentFilter})
            @if (ViewBag.CurrentSort == "Descr")
            {
                <span class="glyphicon glyphicon-arrow-down"></span>
            }
            else if (ViewBag.CurrentSort == "descr_desc")
            {
                <span class="glyphicon glyphicon-arrow-up"></span>
            }
        </th>
        <th>
            @Html.ActionLink("Expiry Date", "Index", new {sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter})
            @if (ViewBag.CurrentSort == "Date")
            {
                <span class="glyphicon glyphicon-arrow-down"></span>
            }
            else if (ViewBag.CurrentSort == "date_desc")
            {
                <span class="glyphicon glyphicon-arrow-up"></span>
            }
        </th>
        @if (User.IsInRole("admin"))
        {
            <th>
                @Html.ActionLink("User", "Index", new {sortOrder = ViewBag.UserSortParm, currentFilter = ViewBag.CurrentFilter})
                @if (ViewBag.CurrentSort == "User")
                {
                    <span class="glyphicon glyphicon-arrow-down"></span>
                }
                else if (ViewBag.CurrentSort == "user_desc")
                {
                    <span class="glyphicon glyphicon-arrow-up"></span>
                }
            </th>
        }
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Code)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ExpiryDate)
        </td>
        @if (User.IsInRole("admin"))
        {
            <td>
                @Html.DisplayFor(modelItem => item.User.UserName)
            </td>
        }
        <td>
            @if (User.IsInRole("admin"))
            {
                @Html.ActionLink("Edit", "Edit", new {id = item.MachineId})
                @: |
            }
            else
            {
                @Html.ActionLink("Edit", "EditDescription", new { id = item.MachineId })
                @: |
            }

            @Html.ActionLink("Logs", "Details", new {id = item.MachineId})

            @if (User.IsInRole("admin"))
            {
                @: |
                @Html.ActionLink("Delete", "Delete", new {id = item.MachineId})
            }
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))